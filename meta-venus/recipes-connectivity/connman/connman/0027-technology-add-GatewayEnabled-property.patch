From 9b508d37f7cfd2d9dda89f859d6ec87b1d04ac3a Mon Sep 17 00:00:00 2001
From: Mans Rullgard <mans@mansr.com>
Date: Wed, 24 Sep 2025 14:03:29 +0100
Subject: [PATCH 27/29] technology: add GatewayEnabled property

---
 src/connman.h    |  1 +
 src/technology.c | 64 ++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 65 insertions(+)

diff --git a/src/connman.h b/src/connman.h
index e849ed86eb0d..ccbe4962d2ea 100644
--- a/src/connman.h
+++ b/src/connman.h
@@ -519,6 +519,7 @@ int __connman_technology_enabled(enum connman_service_type type);
 int __connman_technology_disabled(enum connman_service_type type);
 int __connman_technology_set_offlinemode(bool offlinemode);
 bool __connman_technology_get_offlinemode(void);
+bool __connman_technology_is_gateway_enabled(enum connman_service_type type);
 void __connman_technology_set_connected(enum connman_service_type type,
 					bool connected);
 
diff --git a/src/technology.c b/src/technology.c
index bc3d3704efec..4b45980c0d01 100644
--- a/src/technology.c
+++ b/src/technology.c
@@ -68,6 +68,7 @@ struct connman_technology {
 	char *tethering_passphrase;
 
 	bool enable_persistent; /* Save the tech state */
+	bool gateway_enabled;
 
 	GSList *driver_list;
 
@@ -177,6 +178,9 @@ static void technology_save(struct connman_technology *technology)
 	g_key_file_set_boolean(keyfile, identifier, "Enable",
 				technology->enable_persistent);
 
+	g_key_file_set_boolean(keyfile, identifier, "GatewayEnabled",
+				technology->gateway_enabled);
+
 	g_key_file_set_boolean(keyfile, identifier, "Tethering",
 				technology->tethering_persistent);
 
@@ -411,6 +415,16 @@ static void technology_load(struct connman_technology *technology)
 		g_clear_error(&error);
 	}
 
+	enable = g_key_file_get_boolean(keyfile, identifier,
+					"GatewayEnabled", &error);
+	if (!error)
+		technology->gateway_enabled = enable;
+	else {
+		technology->gateway_enabled = true;
+		need_saving = true;
+		g_clear_error(&error);
+	}
+
 	enable = g_key_file_get_boolean(keyfile, identifier,
 					"Tethering", &error);
 	if (!error)
@@ -441,6 +455,17 @@ bool __connman_technology_get_offlinemode(void)
 	return global_offlinemode;
 }
 
+bool __connman_technology_is_gateway_enabled(enum connman_service_type type)
+{
+	struct connman_technology *technology;
+
+	technology = technology_find(type);
+	if (!technology)
+		return false;
+
+	return technology->gateway_enabled;
+}
+
 static void connman_technology_save_offlinemode(void)
 {
 	GKeyFile *keyfile;
@@ -512,6 +537,11 @@ static void append_properties(DBusMessageIter *iter,
 					DBUS_TYPE_BOOLEAN,
 					&val);
 
+	val = technology->gateway_enabled;
+	connman_dbus_dict_append_basic(&dict, "GatewayEnabled",
+					DBUS_TYPE_BOOLEAN,
+					&val);
+
 	val = technology->tethering;
 	connman_dbus_dict_append_basic(&dict, "Tethering",
 					DBUS_TYPE_BOOLEAN,
@@ -835,6 +865,31 @@ make_reply:
 	return reply;
 }
 
+static DBusMessage *set_gateway_enabled(struct connman_technology *technology,
+					DBusMessage *msg, bool enabled)
+{
+	dbus_bool_t db_enabled = enabled;
+	DBusMessage *reply = NULL;
+	int err = 0;
+
+	if (technology->gateway_enabled == enabled)
+		goto out_reply;
+
+	technology->gateway_enabled = enabled;
+
+	if (technology->enabled)
+		__connman_connection_update_gateway();
+
+	technology_save(technology);
+
+	connman_dbus_property_changed_basic(technology->path,
+			CONNMAN_TECHNOLOGY_INTERFACE, "GatewayEnabled",
+			DBUS_TYPE_BOOLEAN, &db_enabled);
+
+out_reply:
+	return g_dbus_create_reply(msg, DBUS_TYPE_INVALID);
+}
+
 static DBusMessage *set_property(DBusConnection *conn,
 					DBusMessage *msg, void *data)
 {
@@ -948,6 +1003,15 @@ static DBusMessage *set_property(DBusConnection *conn,
 		dbus_message_iter_get_basic(&value, &enable);
 
 		return set_powered(technology, msg, enable);
+	} else if (g_str_equal(name, "GatewayEnabled")) {
+		dbus_bool_t enabled;
+
+		if (type != DBUS_TYPE_BOOLEAN)
+			return __connman_error_invalid_arguments(msg);
+
+		dbus_message_iter_get_basic(&value, &enabled);
+
+		return set_gateway_enabled(technology, msg, enabled);
 	} else
 		return __connman_error_invalid_property(msg);
 
-- 
2.51.0

